#syntax=docker/dockerfile:1.6.0

ARG ref=main

FROM ghcr.io/nicholasdille/docker-setup/base:${ref} AS cosign-bootstrap
ARG TARGETPLATFORM
# renovate: datasource=github-releases depName=sigstore/cosign
ARG COSIGN_VERSION=2.0.2
ARG COSIGN_SHA256=517e96f9d036c4b77db01132cacdbef21e4266e9ad3a93e67773c590ba54e26f
RUN <<EOF
check-github-release-asset "sigstore/cosign" "v${COSIGN_VERSION}" "cosign-linux-${alt_arch}"
echo "### Installing cosign ${COSIGN_VERSION} for bootstrapping on ${TARGETPLATFORM} (${alt_arch})"
curl --silent --location --fail --output "/usr/local/bin/cosign" \
    "https://github.com/sigstore/cosign/releases/download/v${COSIGN_VERSION}/cosign-linux-${alt_arch}"
chmod +x "/usr/local/bin/cosign"

echo "### Checking cosign ${COSIGN_VERSION} for bootstrapping"
sha256sum /usr/local/bin/cosign
echo "${COSIGN_SHA256} /usr/local/bin/cosign" \
| sha256sum --check -

cosign version
EOF

FROM ghcr.io/nicholasdille/docker-setup/base:${ref} AS prepare
COPY --link --from=cosign-bootstrap /usr/local/bin/cosign /usr/local/bin/
ARG name
ARG version
RUN <<EOF
check-github-release-asset "sigstore/cosign" "v${version}" "cosign-linux-${alt_arch}"
echo "### Installing cosign ${version}"
curl --silent --location --fail --output "${prefix}${target}/bin/cosign" \
    "https://github.com/sigstore/cosign/releases/download/v${version}/cosign-linux-${alt_arch}"
chmod +x "${prefix}${target}/bin/cosign"

echo "### Installing shell completion for cosign ${version}"
"${prefix}${target}/bin/cosign" completion bash >"${prefix}${target}/share/bash-completion/completions/cosign"
"${prefix}${target}/bin/cosign" completion fish >"${prefix}${target}/share/fish/vendor_completions.d/cosign.fish"
"${prefix}${target}/bin/cosign" completion zsh >"${prefix}${target}/share/zsh/vendor-completions/_cosign"

echo "### Checking PGP signature for cosign ${version}"
curl --silent --location --fail --output "cosign-linux-${alt_arch}.sig" \
    "https://github.com/sigstore/cosign/releases/download/v${version}/cosign-linux-${alt_arch}.sig"
COSIGN_PUB_KEY="https://github.com/sigstore/cosign/releases/download/v${version}/release-cosign.pub"
cosign verify-blob --key "${COSIGN_PUB_KEY}" --signature "cosign-linux-${alt_arch}.sig" "${prefix}${target}/bin/cosign"
rm -f "cosign-linux-${alt_arch}.sig"

echo "### Checking keyless signature for cosign ${version}"
curl --silent --location --fail --output "cosign-linux-${alt_arch}-keyless.pem" \
    "https://github.com/sigstore/cosign/releases/download/v${version}/cosign-linux-${alt_arch}-keyless.pem"
curl --silent --location --fail --output "cosign-linux-${alt_arch}-keyless.sig" \
    "https://github.com/sigstore/cosign/releases/download/v${version}/cosign-linux-${alt_arch}-keyless.sig"
COSIGN_EXPERIMENTAL=1 cosign verify-blob \
    --cert "cosign-linux-${alt_arch}-keyless.pem" \
    --signature "cosign-linux-${alt_arch}-keyless.sig" \
    --certificate-oidc-issuer https://accounts.google.com \
    --certificate-identity "keyless@projectsigstore.iam.gserviceaccount.com" \
    "${prefix}${target}/bin/cosign"
rm -f "cosign-linux-${alt_arch}-keyless.pem" "cosign-linux-${alt_arch}-keyless.sig"

"${prefix}${target}/bin/cosign" version
EOF