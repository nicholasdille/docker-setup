#syntax=docker/dockerfile:1.5.2

ARG ref=main

FROM ghcr.io/nicholasdille/docker-setup/base:${ref} AS check
ARG name
ARG version
RUN <<EOF
MAJOR_VERSION="$(
    curl --silent --location --fail https://github.com/nodejs/Release/raw/main/schedule.json \
    | jq -r 'to_entries[] | select(.value.maintenance > (now | todate)) | select(.value.lts != null) | select(.value.lts < (now | todate)) | .key' \
    | tr -d v
)"
if test "${version%%.*}" == "${MAJOR_VERSION}"; then
    echo "### Version ${version} matches latest LTS ${MAJOR_VERSION}"
else
    echo "### Version ${version} does not match latest LTS ${MAJOR_VERSION}"
    exit 1
fi
EOF

FROM --platform=amd64 check AS prepare
WORKDIR /go/src/github.com/nodejs/node
ARG name
ARG version
RUN <<EOF
apt-get update
apt-get -y install --no-install-recommends \
    curl \
    python3 \
    gcc \
    g++ \
    linux-headers-generic \
    make
curl --silent --location --fail https://github.com/nodejs/node/archive/refs/tags/v${version}.tar.gz \
| tar --extract --gzip --strip-components=1
./configure \
    --prefix="${prefix}${target}" \
    --fully-static \
    --without-inspector \
    --enable-lto \
    --without-node-options \
    --without-dtrace \
    --without-npm \
    --with-intl=small-icu
make -j2
make install
EOF

FROM --platform=arm64 check AS prepare
WORKDIR /go/src/github.com/nodejs/node
ARG name
ARG version
RUN <<EOF
curl --silent --verbose --location --fail "https://nodejs.org/dist/v${version}/node-v${version}-linux-${alt_arch}.tar.xz" \
| tar --extract --xz --directory="${prefix}${target}" --strip-components=1 --no-same-owner \
    "node-v${version}-linux-${alt_arch}/bin" \
    "node-v${version}-linux-${alt_arch}/include" \
    "node-v${version}-linux-${alt_arch}/lib" \
    "node-v${version}-linux-${alt_arch}/share"
EOF