{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    
    ":label(type/renovate)",

    ":docker",
    "docker:enableMajor",
    "docker:pinDigests",

    ":disableRateLimiting",
    ":ignoreUnstable",
    ":pinVersions",
    ":separateMajorReleases",
    ":automergePr",
    ":automergeRequireAllStatusChecks",
    ":automergeDigest",
    ":automergePatch",
    ":semanticCommits",
    
    ":enableVulnerabilityAlerts",
    ":enableVulnerabilityAlertsWithLabel(security)"
  ],
  "enabledManagers": [
    "dockerfile",
    "github-actions",
    "regex"
  ],
  "baseBranches": [
    "main",
    "v1.6"
  ],
  "useBaseBranchConfig": "merge",
  "platformAutomerge": true,
  "rebaseWhen": "conflicted",
  "rebaseLabel": "renovate/rebase",
  "stopUpdatingLabel": "renovate/stop-updating",
  "recreateClosed": false,
  "major": {
    "labels": [
      "bump/major"
    ]
  },
  "minor": {
    "labels": [
      "bump/minor"
    ]
  },
  "patch": {
    "labels": [
      "bump/patch"
    ]
  },
  "pin": {
    "labels": [
      "bump/pin"
    ]
  },
  "digest": {
    "labels": [
      "bump/digest"
    ]
  },
  "packageRules": [
    {
      "matchFiles": [
        "^env/alpine-3.15/Dockerfile$"
      ],
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "alpine"
      ],
      "allowedVersions": "<=3.15.0"
    },
    {
      "matchFiles": [
        "^env/alpine-3.16/Dockerfile$"
      ],
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "alpine"
      ],
      "allowedVersions": "<=3.16"
    },
    {
      "matchFiles": [
        "^env/amazonlinux-2022/Dockerfile$"
      ],
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "amazonlinux"
      ],
      "allowedVersions": "<=2022"
    },
    {
      "matchFiles": [
        "^env/debian-11/Dockerfile$"
      ],
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "debian"
      ],
      "allowedVersions": "<=11"
    },
    {
      "matchFiles": [
        "^env/fedora-35/Dockerfile$"
      ],
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "fedora"
      ],
      "allowedVersions": "<=35"
    },
    {
      "matchFiles": [
        "^env/opensuse-leap-15/Dockerfile$"
      ],
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "opensuse/leap"
      ],
      "allowedVersions": "/^[0-9]+\\.[0-9]+(\\.[0-9]+)?$/"
    },
    {
      "matchFiles": [
        "^env/rockylinux-8/Dockerfile$"
      ],
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "rockylinux"
      ],
      "allowedVersions": "<=8"
    },
    {
      "matchFiles": [
        "^env/rockylinux-9/Dockerfile$"
      ],
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "rockylinux"
      ],
      "allowedVersions": "<=9"
    },
    {
      "matchFiles": [
        "^env/ubuntu-20.04/Dockerfile$"
      ],
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "ubuntu"
      ],
      "allowedVersions": "~20.04"
    },
    {
      "matchFiles": [
        "^env/ubuntu-22.04/Dockerfile$"
      ],
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "ubuntu"
      ],
      "allowedVersions": "~22.04"
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "golang",
        "rust"
      ],
      "updateTypes": [
        "pin",
        "digest",
        "patch",
        "minor",
        "major"
      ],
      "automerge": true
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "updateTypes": [
        "pin",
        "digest"
      ],
      "automerge": true
    },
    {
      "matchDatasources": [
        "github-releases",
        "github-tags",
        "git-tags",
        "gitlab-releases"
      ],
      "updateTypes": [
        "pin",
        "digest",
        "patch",
        "minor",
        "major"
      ],
      "automerge": true
    }
  ],
  "regexManagers": [
    {
      "fileMatch": [
        "^.github/workflows/release.yml$"
      ],
      "matchStrings": [
        "SEMVER_VERSION=(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "fsaintjacques/semver-tool",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^.github/workflows/release.yml$"
      ],
      "matchStrings": [
        "SHELLCHECK_VERSION=(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "koalaman/shellcheck",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^.github/workflows/release.yml$"
      ],
      "matchStrings": [
        "YQ_VERSION=(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "mikefarah/yq",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "#syntax=(?<depName>.*?):(?<currentValue>.*?)\\n"
      ],
      "datasourceTemplate": "docker"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: act\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "nektos/act",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: arkade\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "alexellis/arkade",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: artifactory-cleanup\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "crazy-max/artifactory-cleanup",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: bin\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "marcosnils/bin",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: buildah\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "nicholasdille/buildah-static",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: buildg\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "ktock/buildg",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: buildkit\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "moby/buildkit",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: buildx\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "docker/buildx",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: bypass4netns\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "rootless-containers/bypass4netns",
      "datasourceTemplate": "github-tags",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: cas\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "codenotary/cas",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: catatonit\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "openSUSE/catatonit",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: cilium\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "cilium/cilium-cli",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: cinf\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "mhausenblas/cinf",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: clusterawsadm\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "kubernetes-sigs/cluster-api-provider-aws",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: clusterctl\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "kubernetes-sigs/cluster-api",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: cmctl\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "cert-manager/cert-manager",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: cni-isolation\\n\\s+version: \"?(?<currentValue>.*?)`\"?\\n"
      ],
      "depNameTemplate": "AkihiroSuda/cni-isolation",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: cni\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "containernetworking/plugins",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: cnitool\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "containernetworking/cni",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: cntr\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "Mic92/cntr",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: conmon\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "nicholasdille/conmon-static",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: containerd\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "containerd/containerd",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: containers-common\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "containers/common",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: containerssh\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "ContainerSSH/ContainerSSH",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: cosign\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "sigstore/cosign",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: cri-dockerd\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "Mirantis/cri-dockerd",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: cri-o\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "cri-o/cri-o",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: crictl\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "kubernetes-sigs/cri-tools",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: crane\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "google/go-containerregistry",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: crun\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "nicholasdille/crun-static",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: ctop\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "bcicen/ctop",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: cyclonedx-cli\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "CycloneDX/cyclonedx-cli",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: dagger\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "dagger/dagger",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: dasel\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "TomWright/dasel",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: datree\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "datreeio/datree",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: diun\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "crazy-max/diun",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: dive\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "wagoodman/dive",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: docker-compose-v1\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "docker/compose",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "regex:^(?<major>1?)\\.(?<minor>\\d+?)\\.(?<patch>\\d+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: docker-compose-switch\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "docker/compose-switch",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: docker-compose\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "docker/compose",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: docker-credential-acr-env\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "chrismellard/docker-credential-acr-env",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: docker-credential-ecr-login\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "awslabs/amazon-ecr-credential-helper",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: docker-credential-gcr\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "GoogleCloudPlatform/docker-credential-gcr",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: docker-credential-helpers\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "docker/docker-credential-helpers",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: docker-credential-magic\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "docker-credential-magic/docker-credential-magic",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: docker-machine\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "docker/machine",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: docker\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n",
        "name: docker-manpages\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "moby/moby",
      "datasourceTemplate": "github-tags",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: docker-sbom\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "docker/sbom-cli-plugin",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: docker-scan\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "docker/scan-cli-plugin",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: docuum\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "stepchowfun/docuum",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: dry\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "moncho/dry",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: duffle\\n\\s+version: \"?(?<currentValue>.*?)\"?\\n"
      ],
      "depNameTemplate": "cnabio/duffle",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: dyff\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "homeport/dyff",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: ekz\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "chanwit/ekz",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: emojisum\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "emojisum/emojisum",
      "datasourceTemplate": "github-tags"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: envcli\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "EnvCLI/EnvCLI",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: envsub\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "stephenc/envsub",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: faas-cli\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "openfaas/faas-cli",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: faasd\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "openfaas/faasd",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: firecracker\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "firecracker-microvm/firecracker",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: firectl\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "firecracker-microvm/firectl",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: firejail\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "netblue30/firejail",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: footloose\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "weaveworks/footloose",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: fuse-overlayfs\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "containers/fuse-overlayfs",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: fuse_overlayfs_snapshotter\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "containerd/fuse-overlayfs-snapshotter",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: gh\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "cli/cli",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: gitlab-runner\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "gitlab-org/gitlab-runner",
      "datasourceTemplate": "gitlab-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: gitsign\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "sigstore/gitsign",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: glab\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "gitlab-org/cli",
      "datasourceTemplate": "gitlab-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: glow\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "charmbracelet/glow",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^docker-setup.sh$"
      ],
      "matchStrings": [
        "go_version=(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "golang",
      "datasourceTemplate": "docker",
      "extractVersionTemplate": "^(?<version>\\d+\\.\\d+\\.\\d+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: go-md2man\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "nicholasdille/go-md2man-static",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: gosu\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "tianon/gosu",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: grype\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "anchore/grype",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: gvisor\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "google/gvisor",
      "datasourceTemplate": "github-tags",
      "extractVersionTemplate": "^release-(?<version>.+?)\\.0$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: hadolint\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "hadolint/hadolint",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: havener\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "homeport/havener",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: ignite\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "weaveworks/ignite",
      "datasourceTemplate": "github-tags",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: helm\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "helm/helm",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: hcloud\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "hetznercloud/cli",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: helmfile\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "roboll/helmfile",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: hub\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "github/hub",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: hub-tool\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "docker/hub-tool",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: imgcrypt\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "containerd/imgcrypt",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: imgpkg\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "vmware-tanzu/carvel-imgpkg",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: img\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "genuinetools/img",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: iptables\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "nicholasdille/centos-iptables-legacy",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: jq\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "stedolan/jq",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^jq-(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: jp\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "jmespath/jp",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: jwt\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "mike-engel/jwt-cli",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: k3d\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "rancher/k3d",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: k3s\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "k3s-io/k3s",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: k3sup\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "alexellis/k3sup",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: k9s\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "derailed/k9s",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kapp\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "vmware-tanzu/carvel-kapp",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kbld\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "vmware-tanzu/carvel-kbld",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kbrew\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "kbrew-dev/kbrew",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kind\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "kubernetes-sigs/kind",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kink\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "Trendyol/kink",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kompose\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "kubernetes/kompose",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kots\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "replicatedhq/kots",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubeadm\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "kubernetes/kubernetes",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubectl\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "kubernetes/kubernetes",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubectl-build\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "vmware-tanzu/buildkit-cli-for-kubectl",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubectl-free\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "makocchi-git/kubectl-free",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubectl-resources\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "howardjohn/kubectl-resources",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubefire\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "innobead/kubefire",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubelet\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "kubernetes/kubernetes",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubeletctl\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "cyberark/kubeletctl",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubesec\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "controlplaneio/kubesec",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubeswitch\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "danielb42/kubeswitch",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: krew\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "kubernetes-sigs/krew",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: ktop\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "vladimirvivien/ktop",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kube-bench\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "aquasecurity/kube-bench",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubeclarity-cli\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "openclarity/kubeclarity",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubent\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "doitintl/kube-no-trouble",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubeval\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "instrumenta/kubeval",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kubo\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "ipfs/kubo",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kustomize\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "kubernetes-sigs/kustomize",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^kustomize/v(?<version>.+)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: kustomizer\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "stefanprodan/kustomizer",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^kustomize/v(?<version>.+)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: lab\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "zaquestion/lab",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: lazydocker\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "jesseduffield/lazydocker",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: lazygit\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "jesseduffield/lazygit",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: libcap\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "git://git.kernel.org/pub/scm/libs/libcap/libcap.git",
      "datasourceTemplate": "git-tags",
      "extractVersionTemplate": "^libcap-(?<version>\\d+\\.\\d+)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: libcap-ng\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "stevegrubb/libcap-ng",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: libcgroup\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "libcgroup/libcgroup",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: loft\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "loft-sh/loft",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: manifest-tool\\n\\s+version: \"?(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "estesp/manifest-tool",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: minectl\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "dirien/minectl",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: minikube\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "kubernetes/minikube",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: mitmproxy\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "mitmproxy/mitmproxy",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: mp3binder\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "crra/mp3binder",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: mutagen\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "mutagen-io/mutagen",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: mutagen\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "mutagen-io/mutagen-compose",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: nerdctl\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "containerd/nerdctl",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: norouter\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "norouter/norouter",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: notation\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "notaryproject/notation",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: nsutils\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "rd235/nsutils",
      "datasourceTemplate": "github-tags",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: oci_image_tool\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "opencontainers/image-tools",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: oci_runtime_tool\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "opencontainers/runtime-tools",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: oras\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "oras-project/oras",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: patat\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "jaspervdj/patat",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: podman\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "nicholasdille/podman-static",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: polaris\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "FairwindsOps/polaris",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: portainer\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "portainer/portainer",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: porter\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "getporter/porter",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: qemu\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "nicholasdille/qemu-static",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: regclient\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "regclient/regclient",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: registry\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "distribution/distribution",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: rekor\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "sigstore/rekor",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: reptyr\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "nelhage/reptyr",
      "datasourceTemplate": "github-tags",
      "extractVersionTemplate": "^reptyr-(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: rootlesskit\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "rootless-containers/rootlesskit",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: runc\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "opencontainers/runc",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^docker-setup.sh$"
      ],
      "matchStrings": [
        "rust_version=(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "rust",
      "datasourceTemplate": "docker",
      "extractVersionTemplate": "^(?<version>\\d+\\.\\d+\\.\\d+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: scorecard\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "ossf/scorecard",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: semver\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "fsaintjacques/semver-tool",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: shortnames\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "containers/shortnames",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: skopeo\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "nicholasdille/skopeo-static",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: slides\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "maaslalani/slides",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: slirp4netns\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "rootless-containers/slirp4netns",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: sloop\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "salesforce/sloop",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: sops\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "mozilla/sops",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: ssh-key-confirmer\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "benjojo/ssh-key-confirmer",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: sshocker\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "lima-vm/sshocker",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: stargz-snapshotter\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "containerd/stargz-snapshotter",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: su-exec\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "ncopa/su-exec",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: stern\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "stern/stern",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: switcher\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "danielfoehrKn/kubeswitch",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: syft\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "anchore/syft",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: task\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "go-task/task",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: tini\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "krallin/tini",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: trillian\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "google/trillian",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: trivy\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "aquasecurity/trivy",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: uidmap\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "shadow-maint/shadow",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: umoci\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "opencontainers/umoci",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: util-linux\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "util-linux/util-linux",
      "datasourceTemplate": "github-tags",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: yq\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "mikefarah/yq",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: vcluster\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "loft-sh/vcluster",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: vendir\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "vmware-tanzu/carvel-vendir",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: watchtower\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "containrrr/watchtower",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: webhookd\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "ncarlier/webhookd",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: win-gpg-agent\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "rupor-github/win-gpg-agent",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: yasu\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "crazy-max/yasu",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: ytt\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "vmware-tanzu/carvel-ytt",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [
        "^tools.yaml$"
      ],
      "matchStrings": [
        "name: zot\\n\\s+version: \"?(?<currentValue>.*?)\n"
      ],
      "depNameTemplate": "project-zot/zot",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    }
  ]
}
