#syntax=docker/dockerfile:1.4.3

ARG image=ubuntu:22.04@sha256:20fa2d7bb4de7723f542be5923b06c4d704370f0390e4ae9e1c833c8785644c1
ARG ref=main
# INSERT FROM

FROM ${image} AS base

SHELL [ "bash", "-e", "-c"]

COPY <<no-recommends <<no-suggests /etc/apt/apt.conf.d/
APT::Install-Recommends "false";
no-recommends
APT::Install-Suggests "false";
no-suggests

# INSERT COPY

# TODO: Replace jq with dasel?
RUN <<EOF
apt-get update
apt-get -y install \
    jq
EOF

# TODO: Use dedicated sub-shell for each post_install script
# TODO: Implement mocked functions
RUN <<EOF
mkdir -p /var/cache/docker-setup
export prefix=
export target=${prefix}/usr/local
export relative_target=/usr/local
export docker_setup_cache=/var/cache/docker-setup
export docker_setup_contrib=/var/lib/docker-setup/contrib
export docker_setup_manifests=/var/lib/docker-setup/manifests
function has_tool() {
    local tool=$1
    if test -z "${tool}"; then
        echo "has_tool(): You must specify a tool"
        exit 1
    fi
    test -f "${docker_setup_manifests}/${tool}.yaml"
}
function get_lsb_distro_name() {
	local lsb_dist=""
	if test -r "${prefix}/etc/os-release"; then
        # shellcheck disable=SC1091
		lsb_dist="$(source "${prefix}/etc/os-release" && echo "$ID")"
	fi
	echo "${lsb_dist}"
}
function is_debian() {
    local lsb_dist
    lsb_dist=$(get_lsb_distro_name)
    case "${lsb_dist}" in
        ubuntu|debian|raspbian)
            return 0
            ;;
        *)
            return 1
            ;;
    esac
}
function is_clearlinux() {
    local lsb_dist
    lsb_dist=$(get_lsb_distro_name)
    case "${lsb_dist}" in
        clear-linux-os)
            return 0
            ;;
        *)
            return 1
            ;;
    esac
}
function is_redhat() {
    local lsb_dist
    lsb_dist=$(get_lsb_distro_name)
    case "${lsb_dist}" in
        rhel|sles|fedora|amzn|rocky)
            return 0
            ;;
        *)
            return 1
            ;;
    esac
}
function is_alpine() {
    local lsb_dist
    lsb_dist=$(get_lsb_distro_name)
    case "${lsb_dist}" in
        alpine)
            return 0
            ;;
        *)
            return 1
            ;;
    esac
}
if test -d /var/lib/docker-setup/post_install; then
    FILES="$(find /var/lib/docker-setup/post_install -type f -name \*.sh)"
    for FILE in ${FILES}; do
        echo "Running post install for $(basename "${FILE}" .sh)"
        source ${FILE}
    done
fi
rm -rf /var/cache/docker-setup
EOF

LABEL org.opencontainers.image.source="https://github.com/nicholasdille/docker-setup" \
      org.opencontainers.image.description="Image generated by docker-setup" \
      org.opencontainers.image.version="${ref}"